name: ECR image
description: Builds and pushes AWS ECR image
inputs:
  aws-role-to-assume:
    description: 'AWS role to assume. Use either role or access key, not both.'
    required: false
  aws-access-key-id:
    description: 'AWS access key'
    required: false
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: false
  aws-region:
    description: 'AWS region'
    required: true
  ecr-repo:
    description: 'ECR repo name. Defaults to GH repo name.'
    required: false
  ecr-tag:
    description: 'ECR tag. Defaults to current tag.'
    required: false
  docker-build-args:
    description: 'Args passed to docker build'
    required: false
    default: '-f ./Dockerfile .'
  docker-use-build-kit:
    description: 'By using BuildKit, users should see an improvement on performance, storage management, feature functionality, and security.'
    required: false
    default: "0"

outputs:
  ecr-image:
    description: 'Full address of the ECR image'
    value: ${{ steps.build-push.outputs.ecr-image }}

runs:
  using: "composite"
  steps:
  ## REPO
  # it is not ok to use "set-env"
  # https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
  - name: set REPO
    shell: bash
    run: |
      ([ ! -z "${{ inputs.ecr-repo }}" ] \
        && echo "REPO=${{ inputs.ecr-repo }}" \
        || echo "REPO=$(echo $GITHUB_REPOSITORY | cut -d/ -f2)") \
      >> $GITHUB_ENV
  ## TAG
  - name: set TAG
    shell: bash
    run: |
      ([ ! -z "${{ inputs.ecr-tag }}" ] \
        && echo "TAG=${{ inputs.ecr-tag }}" \
        || echo "TAG=${GITHUB_REF/refs\/tags\//}") \
      >> $GITHUB_ENV
  ##
  - name: Assume AWS role
    if: ${{ inputs.aws-role-to-assume }}
    uses: aws-actions/configure-aws-credentials@v1.6.0
    with:
      role-to-assume: ${{ inputs.aws-role-to-assume }}
      aws-region: ${{ inputs.aws-region }}
  - name: Configure AWS credentials
    if: ${{ !inputs.aws-role-to-assume }}
    uses: aws-actions/configure-aws-credentials@v1.6.0
    with:
      aws-access-key-id: ${{ inputs.aws-access-key-id }}
      aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
      aws-region: ${{ inputs.aws-region }}
  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1
  - name: Build, tag, and push image to Amazon ECR
    id: build-push
    shell: bash
    env:
      ECR_IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ env.REPO }}:${{ env.TAG }}"
      DOCKER_BUILDKIT: ${{ inputs.docker-use-build-kit }}
    run: |
      docker build -t $ECR_IMAGE ${{ inputs.docker-build-args }}
      docker push $ECR_IMAGE
      echo "::set-output name=ecr-image::$(echo $ECR_IMAGE)"
