name: ECR image
description: Builds and pushes AWS ECR image. Uses buildx.
inputs:
  aws-role-to-assume:
    description: 'AWS role to assume. Use either role or access key, not both.'
    required: false
  aws-access-key-id:
    description: 'AWS access key'
    required: false
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: false
  aws-region:
    description: 'AWS region'
    required: true
  ecr-repo:
    description: 'ECR repo name. Defaults to GH repo name.'
    required: false
  ecr-tag:
    description: 'ECR tag. Defaults to current tag.'
    required: false
  docker-build-args:
    description: 'Args passed to docker build'
    required: false
    default: '-f ./Dockerfile .'
  platforms:
    description: 'Comma separated list of platforms, e.g.: linux/amd64,linux/arm64 (see docker build --platform)'
    required: false
    default: "linux/amd64"

runs:
  using: "composite"
  steps:
  ## REPO
  # it is not ok to use "set-env"
  # https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
  - name: set REPO
    shell: bash
    run: |
      ([ ! -z "${{ inputs.ecr-repo }}" ] \
        && echo "REPO=${{ inputs.ecr-repo }}" \
        || echo "REPO=$(echo $GITHUB_REPOSITORY | cut -d/ -f2)") \
      >> $GITHUB_ENV
  ## TAG
  - name: set TAG
    shell: bash
    run: |
      ([ ! -z "${{ inputs.ecr-tag }}" ] \
        && echo "TAG=${{ inputs.ecr-tag }}" \
        || echo "TAG=${GITHUB_REF/refs\/tags\//}") \
      >> $GITHUB_ENV
  ##
  - name: Assume AWS role
    if: ${{ inputs.aws-role-to-assume }}
    uses: aws-actions/configure-aws-credentials@v1.7.0
    with:
      role-to-assume: ${{ inputs.aws-role-to-assume }}
      aws-region: ${{ inputs.aws-region }}
  - name: Configure AWS credentials
    if: ${{ !inputs.aws-role-to-assume }}
    uses: aws-actions/configure-aws-credentials@v1.7.0
    with:
      aws-access-key-id: ${{ inputs.aws-access-key-id }}
      aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
      aws-region: ${{ inputs.aws-region }}
  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1.5.3
  -
    name: Set up QEMU
    if: inputs.platforms != 'linux/amd64'
    uses: docker/setup-qemu-action@v2.1.0
  -
    name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2.2.1
    with:
      platforms: ${{ inputs.platforms }}
      install: true # enable buildx by default
  -
    name: Build, tag, and push image to Amazon ECR
    id: build-push
    shell: bash
    env:
      ECR_REPO: "${{ steps.login-ecr.outputs.registry }}/${{ env.REPO }}"
      TAG: ${{ env.TAG }}
      PLATFORMS: ${{ inputs.platforms }}
    run: |
      set -x
      export IFS=",";
      # AWS lambdas do not support a single image with multiple platforms, that
      # is why image for each platform has to be build, tagged and pushed
      # separately.
      for p in $PLATFORMS; do
        if [ $p == "linux/amd64" ]; then
          EXTRA_TAG=""
        else
          EXTRA_TAG="-${p#"linux/"}"
        fi
        docker build --push --platform=$p -t "${ECR_REPO}:${TAG}${EXTRA_TAG}" ${{ inputs.docker-build-args }}
      done
